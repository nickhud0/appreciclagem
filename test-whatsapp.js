// Script de teste para WhatsApp
// Execute no console do navegador (F12)

console.log('üß™ Teste do WhatsApp - App Reciclagem Pereque');

// Fun√ß√£o para testar gera√ß√£o de PDF
async function testarGeracaoPDF() {
  console.log('üìÑ Testando gera√ß√£o de PDF...');
  
  try {
    // Simular dados de comanda para teste
    const comandaTeste = {
      numero: 'TEST-001',
      data: '25/12/2024',
      horario: '14:30',
      tipo: 'venda',
      itens: [
        {
          produto: 'Papel Teste',
          quantidade: 10,
          precoUnitario: 1.50,
          total: 15.00
        },
        {
          produto: 'Pl√°stico Teste',
          quantidade: 5,
          precoUnitario: 2.00,
          total: 10.00
        }
      ],
      total: 25.00
    };
    
    if (typeof window.pdfService !== 'undefined') {
      const pdf = window.pdfService.generateComandaPDF(comandaTeste);
      console.log('‚úÖ PDF gerado com sucesso:', pdf);
      return true;
    } else {
      console.log('‚ùå pdfService n√£o dispon√≠vel');
      return false;
    }
  } catch (error) {
    console.error('‚ùå Erro ao testar PDF:', error);
    return false;
  }
}

// Fun√ß√£o para testar compartilhamento WhatsApp
async function testarWhatsApp() {
  console.log('üì± Testando compartilhamento WhatsApp...');
  
  try {
    const phoneNumber = '11999999999';
    const message = 'Teste de comanda via WhatsApp';
    
    if (typeof window.shareComandaWhatsAppAndroid !== 'undefined') {
      // Simular PDF path
      const pdfPath = 'file:///test/comanda.pdf';
      
      await window.shareComandaWhatsAppAndroid(pdfPath, phoneNumber, message);
      console.log('‚úÖ WhatsApp testado com sucesso');
      return true;
    } else {
      console.log('‚ùå shareComandaWhatsAppAndroid n√£o dispon√≠vel');
      return false;
    }
  } catch (error) {
    console.error('‚ùå Erro ao testar WhatsApp:', error);
    return false;
  }
}

// Fun√ß√£o para testar busca de comanda
async function testarBuscaComanda() {
  console.log('üîç Testando busca de comanda...');
  
  try {
    if (typeof window.databaseV2Service !== 'undefined') {
      const comandas = await window.databaseV2Service.getComandasRecentes(1);
      console.log('‚úÖ Comandas encontradas:', comandas);
      return comandas.length > 0;
    } else {
      console.log('‚ùå databaseV2Service n√£o dispon√≠vel');
      return false;
    }
  } catch (error) {
    console.error('‚ùå Erro ao buscar comandas:', error);
    return false;
  }
}

// Fun√ß√£o para testar conex√£o com Supabase
async function testarSupabase() {
  console.log('‚òÅÔ∏è Testando conex√£o Supabase...');
  
  try {
    if (typeof window.supabaseService !== 'undefined') {
      const comandas = await window.supabaseService.getComandas(1);
      console.log('‚úÖ Supabase conectado, comandas:', comandas);
      return true;
    } else {
      console.log('‚ùå supabaseService n√£o dispon√≠vel');
      return false;
    }
  } catch (error) {
    console.error('‚ùå Erro ao conectar Supabase:', error);
    return false;
  }
}

// Fun√ß√£o principal de teste
async function executarTestesWhatsApp() {
  console.log('üöÄ Iniciando testes do WhatsApp...');
  
  const resultados = {
    pdf: await testarGeracaoPDF(),
    comanda: await testarBuscaComanda(),
    supabase: await testarSupabase(),
    whatsapp: await testarWhatsApp()
  };
  
  console.log('üìä Resultados dos testes:', resultados);
  
  const sucessos = Object.values(resultados).filter(r => r).length;
  const total = Object.keys(resultados).length;
  
  console.log(`‚úÖ ${sucessos}/${total} testes passaram`);
  
  if (sucessos === total) {
    console.log('üéâ Todos os testes passaram! WhatsApp deve estar funcionando.');
  } else {
    console.log('‚ö†Ô∏è Alguns testes falharam. Verifique os erros acima.');
  }
  
  return resultados;
}

// Fun√ß√£o para diagnosticar problema espec√≠fico
function diagnosticarWhatsApp() {
  console.log('üîß Diagnosticando problema do WhatsApp...');
  
  const diagnosticos = {
    'Capacitor dispon√≠vel': typeof window.Capacitor !== 'undefined',
    'Share dispon√≠vel': typeof window.Share !== 'undefined',
    'Browser dispon√≠vel': typeof window.Browser !== 'undefined',
    'Filesystem dispon√≠vel': typeof window.Filesystem !== 'undefined',
    'jsPDF dispon√≠vel': typeof window.jsPDF !== 'undefined',
    'Plataforma nativa': window.Capacitor?.isNativePlatform?.() || false
  };
  
  console.log('üìã Diagn√≥sticos:', diagnosticos);
  
  const problemas = Object.entries(diagnosticos)
    .filter(([_, status]) => !status)
    .map(([nome, _]) => nome);
  
  if (problemas.length > 0) {
    console.log('‚ùå Problemas encontrados:', problemas);
  } else {
    console.log('‚úÖ Todos os componentes necess√°rios est√£o dispon√≠veis');
  }
  
  return diagnosticos;
}

// Exportar fun√ß√µes para uso global
window.testarGeracaoPDF = testarGeracaoPDF;
window.testarWhatsApp = testarWhatsApp;
window.testarBuscaComanda = testarBuscaComanda;
window.testarSupabase = testarSupabase;
window.executarTestesWhatsApp = executarTestesWhatsApp;
window.diagnosticarWhatsApp = diagnosticarWhatsApp;

console.log('‚úÖ Script de teste carregado!');
console.log('üìù Comandos dispon√≠veis:');
console.log('  - executarTestesWhatsApp() - Executa todos os testes');
console.log('  - diagnosticarWhatsApp() - Diagnostica problemas');
console.log('  - testarGeracaoPDF() - Testa gera√ß√£o de PDF');
console.log('  - testarWhatsApp() - Testa compartilhamento');
console.log('  - testarBuscaComanda() - Testa busca de comandas');
console.log('  - testarSupabase() - Testa conex√£o Supabase');
